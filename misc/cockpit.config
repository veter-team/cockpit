#UI.Model=../../cockpit/misc/cockpit3/cockpit3.dae
UI.Model=../../cockpit/misc/cockpit4/cockpit4.dae
UI.VideoImage1Id=panel1_png_002
UI.VideoImage2Id=panel1_png_003
UI.GPSImageId=panel2_png
UI.Animations.SteeringWheel=Robot_rotation_euler_Z
#UI.Animations.Acceleration=ds_R_rotation_euler_Z dm_L_rotation_euler_Z dm_R_rotation_euler_Z ds_L_rotation_euler_Z
UI.Animations.Acceleration=dm_L_rotation_euler_Z dm_R_rotation_euler_Z
UI.Animations.Compass=point_001_rotation_euler_Z point_003_rotation_euler_Z point_004_rotation_euler_Z point_000_rotation_euler_Z point_002_rotation_euler_Z

# Front sonar
UI.Animations.SonarE0=point_007_location_X point_008_location_X point_009_location_X point_010_location_X point_011_location_X point_026_location_X point_032_location_X

# Left sonar
UI.Animations.SonarE2=point_005_location_X point_006_location_X point_015_location_X point_027_location_X point_028_location_X point_029_location_X point_030_location_X

# Right sonar
UI.Animations.SonarE4=point_013_location_X point_016_location_X point_017_location_X point_018_location_X point_031_location_X point_019_location_X point_020_location_X

# Back sonar
UI.Animations.SonarE6=point_012_location_X point_014_location_X point_021_location_X point_022_location_X point_023_location_X point_024_location_X point_025_location_X

#Ice.Default.Router=Glacier2/router:ssl -h races.game-host.org -p 4064

Cockpit.Endpoints=tcp -p 10200:udp -p 10200:udp -h localhost -p 10200

# Sensors
Keyboard.proxy=keyboard-sensor:udp -h localhost -p 10200
Joystick.proxy=joystick-sensor:tcp -h ux32v -p 10010:udp -h ux32v -p 10010
Camera.proxy=video-sensor:tcp -h beagleboard -p 10030:udp -h beagleboard -p 10030
Sonars.proxy=sonars:tcp -h beagleboard -p 10020:udp -h beagleboard -p 10020
Compass.proxy=compass:tcp -h beagleboard -p 10020:udp -h beagleboard -p 10020

# Actuators
Chassis.proxy=wheels:tcp -h beagleboard.lan -p 10010:udp -h beagleboard.lan -p 10010
Head.proxy=servo:tcp -h beagleboard.lan -p 10070:udp -h beagleboard.lan -p 10070

# It is important to set 24 bpp here because application expects 24
# bpp while constructing texture for painting video frame.  Also,
# cockpit currently expecs 640x480 frame size that is why videoscale
# element used.

#Decoding.Pipeline=videotestsrc is-live=true ! video/x-raw-yuv,width=640,height=480,framerate=30/1 ! ffmpegcolorspace ! video/x-raw-rgb, bpp=32, depth=32 ! fakesink sync=1

#Decoding.Pipeline=appsrc ! application/x-rtp, payload=96 ! gstrtpjitterbuffer latency=10 ! rtptheoradepay ! theoradec ! videoscale ! video/x-raw-yuv, width=640, height=480, framerate=30/1 ! clockoverlay halign=left valign=top time-format="%Y/%m/%d %H:%M:%S" ! ffmpegcolorspace ! video/x-raw-rgb, bpp=32, depth=32 ! fakesink sync=1

# this one works but with big latency if encoding is done on PC
# I suspect that latency happens on the encoder side (x264enc)
#Decoding.Pipeline=appsrc ! application/x-rtp, encoding-name=(string)H264, payload=(int)96 ! gstrtpjitterbuffer latency=10 ! rtph264depay ! video/x-h264, framerate=30/1 ! decodebin2 ! videoscale ! video/x-raw-yuv, width=640, height=480, framerate=30/1 ! clockoverlay halign=left valign=top time-format="%Y/%m/%d %H:%M:%S" ! ffmpegcolorspace ! video/x-raw-rgb, bpp=24, depth=24 ! fakesink sync=1

# this one was used to decode the stream from beagleboard (TIVidenc)
#Decoding.Pipeline=appsrc ! application/x-rtp, encoding-name=(string)H264, payload=(int)96 ! rtph264depay ! video/x-h264 ! ffdec_h264 ! videoscale ! videorate ! video/x-raw-yuv, width=640, height=480, framerate=30/1 ! timeoverlay halign=right valign=top ! clockoverlay halign=left valign=top time-format="%Y/%m/%d %H:%M:%S" ! ffmpegcolorspace ! video/x-raw-rgb, bpp=32, depth=32 ! fakesink sync=1

Decoding.Pipeline=appsrc ! application/x-rtp, payload=(int)96 ! gstrtpjitterbuffer latency=10 ! rtph264depay ! decodebin2 ! videoscale ! video/x-raw-yuv, width=640, height=480, framerate=30/1 ! clockoverlay halign=left valign=top time-format="%Y/%m/%d %H:%M:%S" ! ffmpegcolorspace ! video/x-raw-rgb, bpp=32, depth=32 ! fakesink sync=1

#Decoding.Pipeline=videotestsrc ! video/x-raw-rgba, bpp=32, depth=32, width=640, height=480, framerate=(fraction)30/1 ! fakesink sync=1

# This is configuration of the joystick axis to use for acceleration,
# steering and button to switch driving direction. Joystick.accel and
# Joystick.steering are axis number. Joystick.reverse is the bitmap
# which spcify the button to be used to inverse the direction.

# Default setting for Microsoft SideWinder Force Feedback 2 Joystick
# On Windows accel axis is 2
#Joystick.accel=2
# On Linux it the accel axis is 6
#Joystick.accel=6
#Joystick.steering=0
#Joystick.reverse=2

# Default settings for Logitech Formula Force RX
Joystick.accel=1
Joystick.steering=0
Joystick.reverse=7

# Thread per connection model is required to guarantee oneway dispatching order
# I need to experiment with this model vs. thread pool used below
#Ice.ThreadPerConnection=1

Ice.ThreadPool.Client.Size=4
Ice.ThreadPool.Client.SizeWarn=5
Ice.ThreadPool.Client.SizeMax=6

Ice.ThreadPool.Server.Size=4
Ice.ThreadPool.Server.SizeWarn=7
Ice.ThreadPool.Server.SizeMax=8

Ice.ACM.Client=0
#Ice.MonitorConnections=60
Ice.RetryIntervals=-1

#Ice.Plugin.IceSSL=IceSSL:createIceSSL
#IceSSL.DefaultDir=certs
#IceSSL.CertAuthFile=cacert.pem
#IceSSL.TrustOnly=CN=”Server”

#
# Warn about connection exceptions
#
Ice.Warn.Connections=1

#
# Network Tracing
#
# 0 = no network tracing
# 1 = trace connection establishment and closure
# 2 = like 1, but more detailed
# 3 = like 2, but also trace data transfer
#
Ice.Trace.Network=1

#
# Protocol Tracing
#
# 0 = no protocol tracing
# 1 = trace protocol messages
#
#Ice.Trace.Protocol=1
